@use "sass:math";
@use "./variables" as *;

// flex display
@mixin flexDisplay($mainDir, $crossDir) {
  display: flex;
  justify-content: $mainDir;
  align-items: $crossDir;
}

// 2 columns grid display
@mixin twoColumns($col1, $col2, $rows) {
  display: grid;
  grid-template-columns: $col1 $col2;
  grid-template-rows: $rows;
}

// positioning ppty
@mixin position($name, $top, $right, $bottom, $left) {
  position: $name;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// padding a container on both sides
@mixin containerPadding {
  padding: 0 1.5rem;
}

// columns for various screen widths
@mixin columns($key) {
  @for $i from 1 through 12 {
    .col-#{$key}-#{$i} {
      flex-basis: math.div(100%, 12) * $i;
      max-width: math.div(100%, 12) * $i;
    }
  }
}

// responsive navbar
@mixin responsive($screen) {
  @if ($screen == "lg") {
    @media (max-width: map-get($breakpoints, "lg")) {
      @content;
    }
  } @else if ($screen == "md") {
    @media (max-width: map-get($breakpoints, "md")) {
      @content;
    }
  } @else if ($screen == "sm") {
    @media (max-width: map-get($breakpoints, "sm")) {
      @content;
    }
  } @else if ($screen == "xsm") {
    @media (max-width: map-get($breakpoints, "xsm")) {
      @content;
    }
  }
}
